#!/usr/bin/perl

# @(#) $Id$

use DBI;
use Getopt::Long;
Getopt::Long::Configure('no_auto_abbrev','no_ignore_case','bundling');

$VERSION='0.0.1';

$configPath='conf/migdal.conf';
%Config=();

sub readConfig
{
open CONF,$configPath;
while(<CONF>)
     {
     next if /\?>/ || /<\?/;
     s/#.*$//;
     next if /^\s*$/;
     my ($name,$value)=/^\$(\w+)=(.*);\s*$/;
     $value=~s/^\'//;
     $value=~s/\'$//;
     $value=~s/\\\'/\'/;
     $Config{$name}=$value;
     }
close CONF;
}

sub help
{
print <<EOF;
Usage: $0 [<options>]

Migdal mailing robot

  -c, --config=<path>       Set configuration file path
                            (default is `conf/migdal.conf')
  -h, --help                Print this help and exit
  -v, --version             Print version information and exit

Report bugs to <balu\@yes.ru>
EOF
exit;
}

sub version
{
print <<EOF;
mailrobot (migdal $VERSION)
Copyright (C) 2001 by Dmitry E. Melamud.

This program is free software; you can redistribute it
and/or modify it under the terms of the GNU General Public
License (see COPYING).

EOF
exit;
}

sub init
{
GetOptions('config|c=s'	=> \$configPath,
           'help|h|?'	=> \&help,
           'version|v'	=> \&version);
readConfig();
$dbh=DBI->connect('DBI:mysql:database='.$Config{'dbName'}.';host='.
                  $Config{'dbHost'},$Config{'dbUser'},$Config{'dbPassword'},
		  {'AutoCommit' => 1,'PrintError' => 1,
		   'ShowErrorStatement' => 1});
}

sub subVar
{
my ($s,$vals)=@_;

return $st.constructRemake($1).$ed
       if $s=~/^\$\[([^\]]*)\]$/;
return $s;
}

sub subVars
{
my ($s,$vals)=@_;
my $c='';

while($s ne '')
     {
     my $head,$var;
     ($head,$var,$s)=$s=~/^([^\$%]*)((?:(?:\${?(?:\w+:)?(?:\w+\.)?\w+}?)|(?:%{?\w+}?))?)(.*)$/;
     $c.=$head;
     $c.=subVar($var,$vals) if $var ne '';
     if($head eq '' && $var eq '')
       {
       $c.=substr($s,0,1);
       substr($s,0,1)='';
       }
     }
return $c;
}

sub sendMail
{
my ($mail)=@_;

return if $mail->{'email_disabled'};
my $path=$mail->{'text'};
$path=$Config{'siteDir'}."/$path" unless $path=~/^\//;
open IN,$path;
open OUT,'>/tmp/mailrobot';
$cont=0;
$preamble=1;
while(<IN>)
     {
     chomp;
     if($cont)
       {
       $s=~s/\\\s*$/$_/;
       }
     else
       {
       $s=$_;
       }
     $cont=1,next if $s=~/\\\s*$/;
     $cont=0;
     next if $preamble && ($s=~/^\s*$/ || $s=~/^@/);
     if($s=~/^\s*\w*\s*=/)
       {

       }
     else
       {
       $preamble=0;
       print OUT "$s\n";
       }
     }
close OUT;
close IN;
}

sub run
{
$dbh->do('lock tables mailings write,mailing_types read,users read');
my $mails=$dbh->selectall_hashref(
       'select mailings.id as id,link,receiver_id,text,name,jewish_name,surname,
               gender,email,email_disabled
        from mailings
	     left join mailing_types
	          on mailings.type_id=mailing_types.id
	     left join users
	          on mailings.receiver_id=users.id');
foreach my $mail(@{$mails})
        {
	sendMail $mail;
	}
#$dbh->do('delete from mailings');
$dbh->do('unlock tables');
}

sub done
{
$dbh->disconnect();
}

init();
run();
done();
