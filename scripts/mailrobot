#!/usr/bin/perl

# @(#) $Id$

use DBI;
use Getopt::Long;
Getopt::Long::Configure('no_auto_abbrev','no_ignore_case','bundling');

$VERSION='0.0.1';
$configPath='conf/migdal.conf';
@libpath=();
GetOptions('config|c=s'	 => \$configPath,
           'help|h|?'	 => \&help,
	   'libpath|L=s' => \@libpath,
           'version|v'	 => \&version);
push @INC,@libpath;

require 'config.pl';
require 'opscript.pl';

sub help
{
print <<EOF;
Usage: $0 [<options>]

Migdal mailing robot

  -c, --config=<path>       Set configuration file path
                            (default is `conf/migdal.conf')
  -L, --libpath=<path>      Look for libraries in <path>
                            (you can use this option many times)
  -h, --help                Print this help and exit
  -v, --version             Print version information and exit

Report bugs to <balu\@yes.ru>
EOF
exit;
}

sub version
{
print <<EOF;
mailrobot (migdal $VERSION)
Copyright (C) 2001 by Dmitry E. Melamud.

This program is free software; you can redistribute it
and/or modify it under the terms of the GNU General Public
License (see COPYING).

EOF
exit;
}

sub init
{
readConfig();
$dbh=DBI->connect('DBI:mysql:database='.$Config{'dbName'}.';host='.
                  $Config{'dbHost'},$Config{'dbUser'},$Config{'dbPassword'},
		  {'AutoCommit' => 1,'PrintError' => 1,
		   'ShowErrorStatement' => 1});
}

sub sendMail
{
my ($mail)=@_;

return if $mail->{'email_disabled'};
my $path=$mail->{'text'};
$path=$Config{'siteDir'}."/$path" unless $path=~/^\//;
open IN,$path;
my @script=<IN>;
close IN;

open OUT,'|sendmail -t';
print OUT 'To: ',$mail->{'email'},"\n";
print OUT opScript($dbh,\@script,$mail);
close OUT;
}

sub run
{
$dbh->do('lock tables mailings write,mailing_types read,users read');
my $mails=$dbh->selectall_hashref(
		'select mailings.id as id,link,receiver_id,text,
			name,jewish_name,surname,gender,email,
			email_disabled
		 from mailings
		      left join mailing_types
			   on mailings.type_id=mailing_types.id
		      left join users
			   on mailings.receiver_id=users.id');
$dbh->do('delete from mailings');
$dbh->do('unlock tables');
foreach my $mail(@{$mails})
        {
	$mail->{'gender_end'}=$mail->{'gender'} eq 'mine' ? 'ый' : 'ая';
	$mail->{'full_name'}=$mail->{'jewish_name'} ne ''
	                     ? $mail->{'jewish_name'}.' ('.$mail->{'name'}.
			       ') '.$mail->{'surname'}
			     : $mail->{'name'}.' '.$mail->{'surname'};
	sendMail $mail;
	}
}

sub done
{
$dbh->disconnect();
}

init();
run();
done();
