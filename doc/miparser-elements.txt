Элементы (тэги), обрабатываемые miparser
========================================

<<...>>
  Комментарий. Не попадает в выходной поток.

<a ...>
  Вставляет обычный тег <a ...>, добавляя в него дополнительный target, если
  своего target'а у него нет, и включен <retarget>.

  См. <retarget>.

<array [name='...'] [vals='...'] [val1='...'] [val2='...'] ...>
  Создает массив с указанным именем (const<n> по умолчанию) и инициализирует
  его указанным списком значений. Все значения можно поместить в один
  аргумент, разделяя их пробелами или запятыми.

  Результат становится последней константой.

<assign [name='...'] value='...'>
  Присваивает указанной переменной (const<n> по умолчанию) указанное значение.
  
  Результат становится последней константой.

<assign_global [name='...'] value='...'>
  Присваивает указанной глобальной переменной (const<n> по умолчанию)
  указанное значение.

  Результат становится последней константой.

<asp>
  Антипробел. Создает пустой PHP-блок, который объединяется с ближайшими
  PHP-блоками и ликвидирует все пробелы между ними.

<call [name='...'] [object='...'] func='...'|element='...'>
  Вызывает функцию (глобальную или метод указанного объекта) с указанным
  именем или элемент с указанным именем и присваивает возвращаемое значение
  указанной переменной (result<n> по умолчанию). Все аргументы, кроме name,
  object, func и element передаются в качестве аргументов функции, согласно
  объявлению функции.

  Результат становится последним результатом.

<decel name='...' file='...' [params='...'] [defaults='...']>
  Объявляет элемент с указанным именем, определенный в указанном внешнем
  файле, с указанным списком параметров и их значений по умолчанию.

<element name='...' [params='...'] [defaults='...']></element>
  Определяет элемент с указанным именем, с указанным списком параметров и их
  значений по умолчанию. Если перед этим присутствовал <decel> с тем же
  именем, объявляется глобальная функция и параметры можно не указывать. Иначе
  функция маскируется, чтобы не засорять глобальную область видимости и
  допустить использование элементов с одним и тем же именем в разных модулях.

  См. <decel>.

<exec [object='...'] func='...'|element='...'>
  Полностью аналогично <call>, но не сохраняет возвращаемое значение.

  См. <call>.

<for [name='...'] [list='...']></for>
  Создает цикл по элементам указанного итератора (последний итератор, по
  умолчанию) с указанной переменной (item<n> по умолчанию).

  Результат становится текущей переменной цикла.

<for [name='...'] n='...'></for>
  Создает цикл с указанным количеством повторений с указанной переменной
  (item<n> по умолчанию).

  Результат становится текущей переменной цикла.

<hash [name='...']></hash>
  Создает хеш-таблицу с указанным именем (const<n> по умолчанию). Значения
  вставляются тэгом <mapping>.

  Результат становится последней константой.

  См. <mapping>.

<head>
  Вставляет всю необходимую инициализацию в <head>-секцию страницы.

<header></header>
  Отправляет все, находящееся между этими тэгами, в начало результирующего
  PHP-файла.

<html></html>
  Вставляют вызовы функций инициализации и завершения страницы.

<if what='...'>[<elif what='...'>][<elseif what='...'>][<else>]</if>
  Условный оператор.

<include name='...'>
  Генерирует вызов include() с указанным файлом в качестве аргумента.

<iterate [name='...'] class='...' ...>
  Создает итератор с указанным именем (iter<n> по умолчанию) указанного
  класса. Все аргументы, кроме name и class передаются в качестве аргументов
  конструктору, согласно объявлению итератора.

  Результат становится последним итератором.

<macro name='...' [defaults='...']></macro>
  Создает макрос с указанным именем и списком значений по умолчанию.
  Допускаются вложенные макросы.

<mail></mail>
  Вставляют вызовы функций инициализации и завершения для шаблона письма.

<mapping key='...' value='...'>
  Вставляет элемент в хэш-таблицу. Допустим только внутри <hash></hash>.

  См. <hash>.

<noparse></noparse>
  Выключает разбор отмеченного участка страницы.

<obj [name='...'] class='...' ...>
  Создает объект с указанным именем (result<n> по умолчанию) указанного
  класса. Все аргументы, кроме name и class, передаются в качестве аргументов
  конструктору класса.

  Результат становится последним результатом.

<refresh period='...' url='...'>
  Создает HTTP-Refresh (выдает и HTTP header, и <meta http-equiv=...>).

<require name='...'>
  Добавляет файл в список для require_once(). По окончании обработки
  MHTML-файла, в начало сгенерированного PHP-скрипта вставляются все
  затребованные require_once() (каждый файл указывается только один раз).

<require_once name='...'>
  Генерирует вызов require_once() с указанным файлом в качестве аргумента.

<retarget target='...'>
  Перенаправляет все тэги <a> на указанный target.

  См. <a>.

<setup [name='...'] var='...' value='...'>
  Устанавливает указанное свойство указанного объекта (последний результат, по
  умолчанию) в указанное значение.

<setup [name='...']>
  Устанавливает свойства указанного объекта (последний результат, по
  умолчанию) из запроса.

<xml [type='...']></xml>
  Вставляют вызовы функций инициализации и завершения для XML-файла (например,
  RSS feed-а). Можно указать требуемый Content-Type.

<zone></zone>
  Создает зону видимости, при выходе из которой "автоматические переменные"
  восстанавливают свои прежние значения.

@(#) $Id$
