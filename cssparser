#!/usr/bin/perl

# @(#) $Id$

use Getopt::Long;
Getopt::Long::Configure('no_auto_abbrev','no_ignore_case','bundling');

$VERSION='0.0.1';

$Style='default';
$css=1;

%Vars=();

sub display
{
print STDERR @_;
}

sub help
{
print <<EOF;
Usage: $0 [<options>] [<file>]

Migdal website kernel MCSS macro language preprocessor

  -c, --css                 Create CSS stylesheet
  -h, --help                Print this help and exit
  -M, --macros=<filename>   Set macro file path
  -s, --style=<name>        Compile the style <name>
  -p, --php                 Create PHP include
  -v, --version             Print version information and exit

Report bugs to <balu\@yes.ru>
EOF
exit;
}

sub version
{
print <<EOF;
cssparser (migdal $VERSION)
Copyright (C) 2001 by Dmitry E. Melamud.

This program is free software; you can redistribute it
and/or modify it under the terms of the GNU General Public
License (see LICENSE).

EOF
exit;
}

sub macros
{
my (undef,$macros)=@_;

unshift @ARGV,$macros if -r $macros;
}

sub setCSS
{
$css=1;
}

sub setPHP
{
$css=0;
}

sub init
{
$|=1;
GetOptions('css|c'      => \&setCSS,
           'help|h|?'	=> \&help,
           'macros|M=s'	=> \&macros,
	   'php|p'      => \&setPHP,
           'style|s=s'	=> \$Style,
           'version|v'	=> \&version);
}

sub subVars
{
my ($s)=@_;

$s=~s/%(\w+)/$Vars{$1}/ge;
return $s;
}

sub run
{
print "<?php\n" unless $css;
while(<>)
     {
     chomp;
     s/!.*$//;
     next if /^\s*$/;
     if(/^\s*:\s*(\w+)/)
       {
       next if lc $1 ne lc $Style;
       s/^\s*:\s*\w+//;
       }
     if(/^\s*(\w+)\s*=\s*(.*)$/)
       {
       $Vars{$1}=subVars($2);
       unless($css)
             {
	     my $q="'" unless $Vars{$1} eq 'false' || $Vars{$1} eq 'true';
             print "\$style_$1=$q".$Vars{$1}."$q;\n";
	     }
       }
     else
       {
       print subVars($_),"\n" if $css;
       }
     }
print "?>\n" unless $css;
}

sub done
{
}

init;
run;
done;
